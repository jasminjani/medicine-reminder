<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Password Verification</title>
  <style>
    :root {
      --light-blue: #27a2e9;
      --brown: #e7e7e7;
      --blue: #0969da;
      --white: #ffffff;
      --black: black;
      --darkblue: darkblue;
      --red: red;
      --light-red: rgb(255, 128, 128);
    }

    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    .container {
      max-width: 1300px;
      margin: 0 auto;
    }

    .h1 {
      display: flex;
      justify-content: center;
      margin-top: 80px;
    }

    .section {
      width: 100%;
      margin: 0 auto;
      margin-top: 60PX;
    }

    .outer-div {
      display: flex;
      justify-content: center;
      margin: 25px;
    }

    .input {
      height: 35px;
      width: 300px;
      border-radius: 5px;
    }

    .pass-verify-btn {
      margin-top: 35px;
    }

    .btn {
      height: 40px;
      width: 180px;
      border-radius: 3px;
      background-color: var(--light-blue);
      padding-top: 10px;
      cursor: pointer;
      text-align: center;
      margin: auto;
    }

    .btn:hover {
      color: var(--white);
      background-color: var(--blue);
    }

    .p {
      margin-bottom: 13px;
    }
  </style>
</head>

<body>


  <div id="container">
    <div class="h1">
      <h1>Create Password</h1>
    </div>

    <div class="section">


      <form id=form>

        <input type="hidden" name="activation" id="activation">

        <div class="outer-div">
          <div class="sub-div">
            <p class="p"><label for="password">Create Password : </label></p>
            <input class="input validateInput" type="password" name="password" id="password" tabindex="1">
          </div>
        </div>

        <div class="outer-div">
          <div class="sub-div">
            <p class="p"><label for="verify_password">Verify Password : </label></p>
            <input type="password" class="input validateInput" name="verify_password" id="verify_password" tabindex="2">
            <span id="error_password"></span>
          </div>
        </div>

        <div class="pass-verify-btn">
          <p class="btn p" value="submit" id="submit" tabindex="3">submit </p>
          <p class="btn p" value="login" id="login" style="display: none; text-decoration: none;"
            onclick="window.location.href=`/login`">Go to Login page</p>
        </div>

      </form>

    </div>

  </div>

</body>

<script>



  function passwordValidation() {
    let isvalid = true;

    let validated = document.querySelectorAll(".validated");

    let validateInput = document.querySelectorAll('.validateInput');

    // remove if any error message is in frontend
    if (validated?.length) {
      validated.forEach((item) => {
        item.remove();
      });
    }

    validateInput.forEach((field) => {

      let p = document.createElement("p");
      field.insertAdjacentElement("afterend", p);
      p.classList.add("validated");
      p.style.color = "red";
      p.style.margin = "0";
      p.style.fontSize = "12px";
      if (field.value.length < 8) {
        p.innerHTML = "password must be at least 8 characters";
        isvalid = false;
      }
      else if (field.value.search(/[a-zA-Z]/i) < 0) {
        p.innerHTML = "password must contain at least one letter";
        isvalid = false;
      }
      else if (field.value.search(/[0-9]/) < 0) {
        p.innerHTML = "password must contain at least one digit";
        isvalid = false;
      }
      else if (field.value.search(/[*?[#@$?]/) < 0) {
        p.innerHTML = "password must contain at least one special character";
        isvalid = false;
      }
      // else {
      //   isvalid = true;
      // }
    });

    return isvalid;
  }

  let submit = document.getElementById('submit');

  submit.addEventListener("click", async (e) => {
    e.preventDefault();
    await passwordFun();
  });

  submit.addEventListener('keyup', async function (e) {
    try {
      if (e.key === 'Enter') {
        e.preventDefault();
        await passwordFun();
      }
    } catch (error) { console.error(error); }
  });

  async function passwordFun() {
    try {

      if (passwordValidation()) {

        let password = document.getElementById('password').value;
        let verifyPassword = document.getElementById('verify_password').value;

        if (!(password == verifyPassword)) {
          // document.getElementById('error_password').innerHTML = "password does not match";
          let p = document.createElement("p");
          document.getElementById('verify_password').insertAdjacentElement("afterend", p);
          p.innerHTML = "password does not match";
          // p.classList.add("validated");
          p.style.color = "red";
          p.style.margin = "0";
          p.style.fontSize = "12px";
          // isvalid = false;
        }
        else if (password == verifyPassword) {

          let form = document.getElementById('form');
          let formData = new URLSearchParams(new FormData(form));

          let activation = window.location.href.split('/').pop();
          console.log(activation);
          let data = await fetch(`/add-password/${activation}`,
            {
              headers: {
                'Content-Type': 'application/x-www-form-urlencoded'
              },
              method: "POST",
              body: formData
            });

          console.log(data);
          data = await data.json();
          console.log("json ", data);

          document.getElementById('submit').style.display = 'none';
          document.getElementById('login').style.display = 'block';
        }
      }

    } catch (error) {
      console.error(error);
    }
  }

</script>

</html>